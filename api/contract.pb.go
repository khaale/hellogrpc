// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contract.proto

package hellogrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateContractRequest struct {
	ContractType         string   `protobuf:"bytes,1,opt,name=contractType,proto3" json:"contractType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateContractRequest) Reset()         { *m = CreateContractRequest{} }
func (m *CreateContractRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContractRequest) ProtoMessage()    {}
func (*CreateContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{0}
}

func (m *CreateContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContractRequest.Unmarshal(m, b)
}
func (m *CreateContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContractRequest.Marshal(b, m, deterministic)
}
func (m *CreateContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContractRequest.Merge(m, src)
}
func (m *CreateContractRequest) XXX_Size() int {
	return xxx_messageInfo_CreateContractRequest.Size(m)
}
func (m *CreateContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContractRequest proto.InternalMessageInfo

func (m *CreateContractRequest) GetContractType() string {
	if m != nil {
		return m.ContractType
	}
	return ""
}

type CreateContractReply struct {
	ContractId           string   `protobuf:"bytes,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateContractReply) Reset()         { *m = CreateContractReply{} }
func (m *CreateContractReply) String() string { return proto.CompactTextString(m) }
func (*CreateContractReply) ProtoMessage()    {}
func (*CreateContractReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{1}
}

func (m *CreateContractReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateContractReply.Unmarshal(m, b)
}
func (m *CreateContractReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateContractReply.Marshal(b, m, deterministic)
}
func (m *CreateContractReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateContractReply.Merge(m, src)
}
func (m *CreateContractReply) XXX_Size() int {
	return xxx_messageInfo_CreateContractReply.Size(m)
}
func (m *CreateContractReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateContractReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateContractReply proto.InternalMessageInfo

func (m *CreateContractReply) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateContractRequest)(nil), "hellogrpc.CreateContractRequest")
	proto.RegisterType((*CreateContractReply)(nil), "hellogrpc.CreateContractReply")
}

func init() { proto.RegisterFile("contract.proto", fileDescriptor_d19debeba7dea55a) }

var fileDescriptor_d19debeba7dea55a = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xce, 0xcf, 0x2b,
	0x29, 0x4a, 0x4c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0x48, 0xcd, 0xc9,
	0xc9, 0x4f, 0x2f, 0x2a, 0x48, 0x56, 0xb2, 0xe6, 0x12, 0x75, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x75,
	0x86, 0x2a, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe2, 0xe2, 0x81, 0xe9, 0x0a,
	0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x11, 0x53, 0x32, 0xe5, 0x12,
	0x46, 0xd7, 0x5c, 0x90, 0x53, 0x29, 0x24, 0xc7, 0xc5, 0x05, 0x53, 0xe6, 0x99, 0x02, 0xd5, 0x88,
	0x24, 0x62, 0x94, 0xc0, 0xc5, 0x01, 0xd3, 0x20, 0x14, 0xc2, 0xc5, 0x87, 0x6a, 0x84, 0x90, 0x82,
	0x1e, 0xdc, 0x75, 0x7a, 0x58, 0x9d, 0x26, 0x25, 0x87, 0x47, 0x45, 0x41, 0x4e, 0xa5, 0x12, 0x83,
	0x93, 0x01, 0x97, 0x74, 0x66, 0xbe, 0x1e, 0x58, 0x41, 0x6a, 0x45, 0x62, 0x6e, 0x41, 0x4e, 0x6a,
	0x31, 0x44, 0x4f, 0x79, 0x7e, 0x51, 0x4e, 0x8a, 0x13, 0xbf, 0x07, 0x88, 0x1d, 0x0e, 0x62, 0x07,
	0x80, 0x02, 0x24, 0x80, 0x31, 0x89, 0x0d, 0x1c, 0x32, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf6, 0xce, 0x99, 0x28, 0x2b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContractClient is the client API for Contract service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContractClient interface {
	CreateContract(ctx context.Context, in *CreateContractRequest, opts ...grpc.CallOption) (*CreateContractReply, error)
}

type contractClient struct {
	cc *grpc.ClientConn
}

func NewContractClient(cc *grpc.ClientConn) ContractClient {
	return &contractClient{cc}
}

func (c *contractClient) CreateContract(ctx context.Context, in *CreateContractRequest, opts ...grpc.CallOption) (*CreateContractReply, error) {
	out := new(CreateContractReply)
	err := c.cc.Invoke(ctx, "/hellogrpc.Contract/CreateContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContractServer is the server API for Contract service.
type ContractServer interface {
	CreateContract(context.Context, *CreateContractRequest) (*CreateContractReply, error)
}

// UnimplementedContractServer can be embedded to have forward compatible implementations.
type UnimplementedContractServer struct {
}

func (*UnimplementedContractServer) CreateContract(ctx context.Context, req *CreateContractRequest) (*CreateContractReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContract not implemented")
}

func RegisterContractServer(s *grpc.Server, srv ContractServer) {
	s.RegisterService(&_Contract_serviceDesc, srv)
}

func _Contract_CreateContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractServer).CreateContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hellogrpc.Contract/CreateContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractServer).CreateContract(ctx, req.(*CreateContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contract_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hellogrpc.Contract",
	HandlerType: (*ContractServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateContract",
			Handler:    _Contract_CreateContract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contract.proto",
}
